#This platform independent programming language.

#The Java codes are first compiled into byte code (machine-independent code). 
Then the byte code runs on Java Virtual Machine (JVM) regardless of the underlying architecture.

#Non-primitives are always references in Java.

#We cannot pass large objects (like we can do in C++) to functions,
 we always pass references in Java.

 Java Terminology

 1.  Java Virtual Machine(JVM): 
    This is generally referred to as JVM. There are three execution phases of a program. 
    They are written, compile and run the program.
    Writing a program
    1. The compilation is done by the JAVAC compiler which is a primary Java compiler included in the Java development kit (JDK). 
    2. It takes the Java program as input and generates bytecode as output.
    3. In the Running phase of a program, JVM executes the bytecode generated by the compiler.

Every Operating System has a different JVM but the output they produce after the execution of bytecode is the same across all the operating systems.
This is why Java is known as a platform-independent language.

2. Bytecode in the Development Process: 
    The Javac compiler of JDK compiles the java source code into bytecode so that it can be executed by JVM. It is saved as .class file by the compiler

3. Java Development Kit(JDK): 
     It is a complete Java development kit that includes everything including compiler, Java Runtime Environment (JRE), java debuggers, java docs, etc.

4. Java Runtime Environment (JRE): JRE includes a browser, JVM, applet support, and plugins. For running the java program, a computer needs JRE.

5. Garbage Collector:Garbage Collectors can recollect the objects that are not referenced. So Java makes the life of a programmer easy by handling memory management.


#Primary/Main Features of Java

    1. Platform Independent:Compiler converts source code to bytecode and then the JVM executes the bytecode generated by the compiler. This bytecode can run on any platform

    2. Object-Oriented Programming Language:
        Organizing the program in the terms of a collection of objects is a way of object-oriented programming, each of which represents an instance of the class.

        The four main concepts of Object-Oriented programming are:
            Abstraction
            Encapsulation
            Inheritance
            Polymorphism
    3. Simple
    4. Robust
    5. Secure: 
    6. Distributed:
    7. Multithreading: 
    8. Portable:
    9. High Performance:
    10. Dynamic flexibility:
    11. Sandbox Execution:
    12. Write Once Run Anywhere: 
    13. Power of compilation and interpretation:
    
